{"remainingRequest":"/Users/mehmetorhandal/Desktop/workspace/scheduling/web-jadwal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mehmetorhandal/Desktop/workspace/scheduling/web-jadwal/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mehmetorhandal/Desktop/workspace/scheduling/web-jadwal/src/App.vue","mtime":1564036104713},{"path":"/Users/mehmetorhandal/Desktop/workspace/scheduling/web-jadwal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehmetorhandal/Desktop/workspace/scheduling/web-jadwal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mehmetorhandal/Desktop/workspace/scheduling/web-jadwal/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/mehmetorhandal/Desktop/workspace/scheduling/web-jadwal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mehmetorhandal/Desktop/workspace/scheduling/web-jadwal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"App\",\n  data: () => ({\n    drawer: null,\n    breadcrumbs: [],\n    items: [\n      { icon: \"dashboard\", text: \"Dashboard\", route: \"dashboard\" },\n      { icon: \"person\", text: \"Academic Staff List\", route: \"academic-staff-list\" },\n      { icon: \"person\", text: \"Fulfillment List\", route: \"fulfillment-list\" },\n      { icon: \"category\", text: \"Rooms\", route: \"rooms\" },\n      { icon: \"ballot\", text: \"Lessons\", route: \"lessons\" },\n      { icon: \"timeline\", text: \"Organization\", route: \"organization\" },\n      { icon: \"poll\", text: \"Exam Schedule\", route: \"exam-schedule\" }\n    ]\n  }),\n  computed: {\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn;\n    }\n  },\n  watch: {\n    $route() {\n      this.breadcrumbs = this.$route.meta.breadcrumb;\n    }\n  },\n  created() {\n    this.breadcrumbs = this.$route.meta.breadcrumb;\n    this.$http.interceptors.response.use(\n      undefined,\n      err =>\n        new Promise((resolve, reject) => {\n          if (\n            err.status === 401 &&\n            err.config &&\n            !err.config.__isRetryRequest\n          ) {\n            this.$store.dispatch(logout);\n          }\n          throw err;\n        })\n    );\n  },\n  methods: {\n    logout() {\n      this.$store.dispatch(\"logout\").then(() => {\n        window.location.href = \"/login\";\n      });\n    }\n  }\n};\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <v-navigation-drawer fixed clipped app class=\"lighten-4\" v-model=\"drawer\">\n      <v-list dense>\n        <template v-for=\"(item, i) in items\">\n          <v-layout row v-if=\"item.heading\" align-center :key=\"i\">\n            <v-flex xs6>\n              <v-subheader v-if=\"item.heading\">\n                {{\n                item.heading\n                }}\n              </v-subheader>\n            </v-flex>\n            <v-flex xs6 class=\"text-xs-right\">\n              <v-btn small flat>edit</v-btn>\n            </v-flex>\n          </v-layout>\n          <v-divider dark v-else-if=\"item.divider\" class=\"my-3\" :key=\"i\"></v-divider>\n          <v-list-item :to=\"{name: item.route}\" :key=\"i\" v-else>\n            <v-list-item-icon>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-item-icon>\n            <v-list-item-content>\n              <v-list-item-title class=\"grey--text\">\n                {{\n                item.text\n                }}\n              </v-list-item-title>\n            </v-list-item-content>\n            </v-list-item>\n        </template>\n      </v-list>\n    </v-navigation-drawer>\n    <v-toolbar color=\"white\" app fixed :clipped-left=\"$vuetify.breakpoint.mdAndUp\">\n      <!-- <v-toolbar-side-icon @click.native=\"drawer = !drawer\"></v-toolbar-side-icon> -->\n      <span class=\"title ml-3 mr-5\">\n        <img src=\"./assets/logo.png\" height=\"40\">\n      </span>\n      <v-list-item-title v-if=\"isLoggedIn\" @click=\"this.logout\" class=\"grey--text\">Logout</v-list-item-title>\n      <v-breadcrumbs :items=\"this.breadcrumbs\">\n      <template v-slot:item=\"props\">\n        <router-link :to=\"props.item.to ? props.item.to : ':;'\" :class=\"[props.item.disabled && 'disabled']\">{{ props.item.text.toUpperCase() }}</router-link>\n      </template>\n    </v-breadcrumbs>\n      <v-spacer></v-spacer>\n    </v-toolbar>\n    <v-content>\n      <v-container fluid fill-height class=\"grey lighten-4\">\n        <v-layout>\n          <router-view></router-view>\n        </v-layout>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n<script>\nexport default {\n  name: \"App\",\n  data: () => ({\n    drawer: null,\n    breadcrumbs: [],\n    items: [\n      { icon: \"dashboard\", text: \"Dashboard\", route: \"dashboard\" },\n      { icon: \"person\", text: \"Academic Staff List\", route: \"academic-staff-list\" },\n      { icon: \"person\", text: \"Fulfillment List\", route: \"fulfillment-list\" },\n      { icon: \"category\", text: \"Rooms\", route: \"rooms\" },\n      { icon: \"ballot\", text: \"Lessons\", route: \"lessons\" },\n      { icon: \"timeline\", text: \"Organization\", route: \"organization\" },\n      { icon: \"poll\", text: \"Exam Schedule\", route: \"exam-schedule\" }\n    ]\n  }),\n  computed: {\n    isLoggedIn() {\n      return this.$store.getters.isLoggedIn;\n    }\n  },\n  watch: {\n    $route() {\n      this.breadcrumbs = this.$route.meta.breadcrumb;\n    }\n  },\n  created() {\n    this.breadcrumbs = this.$route.meta.breadcrumb;\n    this.$http.interceptors.response.use(\n      undefined,\n      err =>\n        new Promise((resolve, reject) => {\n          if (\n            err.status === 401 &&\n            err.config &&\n            !err.config.__isRetryRequest\n          ) {\n            this.$store.dispatch(logout);\n          }\n          throw err;\n        })\n    );\n  },\n  methods: {\n    logout() {\n      this.$store.dispatch(\"logout\").then(() => {\n        window.location.href = \"/login\";\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"app.scss\";\n</style>\n"]}]}