{"remainingRequest":"/Users/mehmetorhandal/Desktop/workspace/heroku-test/heroku-test/node_modules/thread-loader/dist/cjs.js!/Users/mehmetorhandal/Desktop/workspace/heroku-test/heroku-test/node_modules/babel-loader/lib/index.js!/Users/mehmetorhandal/Desktop/workspace/heroku-test/heroku-test/node_modules/eslint-loader/index.js??ref--13-0!/Users/mehmetorhandal/Desktop/workspace/heroku-test/heroku-test/src/store.js","dependencies":[{"path":"/Users/mehmetorhandal/Desktop/workspace/heroku-test/heroku-test/src/store.js","mtime":1564076322966},{"path":"/Users/mehmetorhandal/Desktop/workspace/heroku-test/heroku-test/node_modules/cache-loader/dist/cjs.js","mtime":1564076320063},{"path":"/Users/mehmetorhandal/Desktop/workspace/heroku-test/heroku-test/node_modules/thread-loader/dist/cjs.js","mtime":1564076322364},{"path":"/Users/mehmetorhandal/Desktop/workspace/heroku-test/heroku-test/node_modules/babel-loader/lib/index.js","mtime":1564076319998},{"path":"/Users/mehmetorhandal/Desktop/workspace/heroku-test/heroku-test/node_modules/eslint-loader/index.js","mtime":1564076320560}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport utils from \"./utils\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    refresh_token: localStorage.getItem('refresh_token') || '',\n    user: {}\n  },\n  getters: {\n    isLoggedIn: function isLoggedIn(state) {\n      return !!state.token;\n    },\n    authStatus: function authStatus(state) {\n      return state.status;\n    }\n  },\n  mutations: {\n    auth_request: function auth_request(state) {\n      state.status = 'loading';\n    },\n    auth_success: function auth_success(state, token, refresh_token, user) {\n      state.status = 'success';\n      state.token = token;\n      state.refresh_token = refresh_token;\n      state.user = user;\n    },\n    auth_error: function auth_error(state) {\n      state.status = 'error';\n    },\n    logout: function logout(state) {\n      state.status = '';\n      state.token = '';\n      state.refresh_token = '';\n    }\n  },\n  actions: {\n    register: function register(_ref, user) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        commit('auth_request');\n        axios({\n          url: utils.apiBaseUrl + 'authentication/register',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          var token = resp.data.data.accessToken;\n          var refresh_token = resp.data.data.refreshToken;\n          var user = resp.data.data;\n          localStorage.setItem('token', token);\n          localStorage.setItem('refresh_token', refresh_token);\n          axios.defaults.headers.common.Authorization = token;\n          commit('auth_success', token, refresh_token, user);\n          resolve(resp);\n        }).catch(function (err) {\n          commit('auth_error', err);\n          localStorage.removeItem('token');\n          localStorage.removeItem('refresh_token');\n          reject(err);\n        });\n      });\n    },\n    login: function login(_ref2, user) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        commit('auth_request');\n        axios({\n          url: utils.apiBaseUrl + 'authentication/login',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          var token = resp.data.data.accessToken;\n          var refresh_token = resp.data.data.refreshToken;\n          var user = resp.data.data;\n          localStorage.setItem('token', token);\n          localStorage.setItem('refresh_token', refresh_token);\n          axios.defaults.headers.common.Authorization = token;\n          commit('auth_success', token, refresh_token, user);\n          resolve(resp);\n          window.location.href = '/';\n        }).catch(function (err) {\n          commit('auth_error');\n          localStorage.removeItem('token');\n          localStorage.removeItem('refresh_token');\n          reject(err);\n        });\n      });\n    },\n    logout: function logout(_ref3) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        commit('logout');\n        localStorage.removeItem('token');\n        localStorage.removeItem('refresh_token');\n        delete axios.defaults.headers.common.Authorization;\n        resolve();\n      });\n    }\n  }\n});",{"version":3,"sources":["/Users/mehmetorhandal/Desktop/workspace/heroku-test/heroku-test/src/store.js"],"names":["Vue","Vuex","axios","utils","use","Store","state","status","token","localStorage","getItem","refresh_token","user","getters","isLoggedIn","authStatus","mutations","auth_request","auth_success","auth_error","logout","actions","register","commit","Promise","resolve","reject","url","apiBaseUrl","data","method","then","resp","accessToken","refreshToken","setItem","defaults","headers","common","Authorization","catch","err","removeItem","login","window","location","href"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport utils from './utils';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    refresh_token: localStorage.getItem('refresh_token') || '',\n    user: {}\n  },\n  getters: {\n    isLoggedIn: state => !!state.token,\n    authStatus: state => state.status,\n  },\n  mutations: {\n    auth_request(state) {\n      state.status = 'loading';\n    },\n    auth_success(state, token, refresh_token, user) {\n      state.status = 'success';\n      state.token = token;\n      state.refresh_token = refresh_token;\n      state.user = user;\n    },\n    auth_error(state) {\n      state.status = 'error';\n    },\n    logout(state) {\n      state.status = '';\n      state.token = '';\n      state.refresh_token = '';\n    }\n  },\n  actions: {\n    register({ commit }, user) {\n      return new Promise((resolve, reject) => {\n        commit('auth_request');\n        axios({ url: utils.apiBaseUrl + 'authentication/register', data: user, method: 'POST' })\n          .then((resp) => {\n            const token = resp.data.data.accessToken;\n            const refresh_token = resp.data.data.refreshToken;\n            const user = resp.data.data;\n\n            localStorage.setItem('token', token);\n            localStorage.setItem('refresh_token', refresh_token);\n\n            axios.defaults.headers.common.Authorization = token;\n            commit('auth_success', token, refresh_token, user);\n            resolve(resp);\n          })\n          .catch((err) => {\n            commit('auth_error', err);\n            localStorage.removeItem('token');\n            localStorage.removeItem('refresh_token');\n            reject(err);\n          });\n      });\n    },\n    login({ commit }, user) {\n      return new Promise((resolve, reject) => {\n        commit('auth_request');\n        axios({ url: utils.apiBaseUrl + 'authentication/login', data: user, method: 'POST' })\n          .then((resp) => {\n\n            const token = resp.data.data.accessToken;\n            const refresh_token = resp.data.data.refreshToken;\n            const user = resp.data.data;\n\n            localStorage.setItem('token', token);\n            localStorage.setItem('refresh_token', refresh_token);\n\n            axios.defaults.headers.common.Authorization = token;\n            commit('auth_success', token, refresh_token, user);\n            resolve(resp);\n            window.location.href = '/';\n          })\n          .catch((err) => {\n            commit('auth_error');\n            localStorage.removeItem('token');\n            localStorage.removeItem('refresh_token');\n            reject(err);\n          });\n      });\n    },\n    logout({ commit }) {\n      return new Promise((resolve, reject) => {\n        commit('logout');\n        localStorage.removeItem('token');\n        localStorage.removeItem('refresh_token');\n        delete axios.defaults.headers.common.Authorization;\n        resolve();\n      });\n    },\n  },\n});\n"]}]}